- content_for :title, I18n.t('occurrence.occurrence_title')
- content_for :scripts do
  %script{src: "//www.gstatic.com/charts/loader.js"}
  %script{src: "/js/jquery.throttledresize.js"}
  :javascript
    $(function() {

      function findOne (haystack, arr) {
        return arr.some(function (v) {
          return haystack.indexOf(v) >= 0;
        });
      }

      $.each(['recorders', 'determiners'], function() {
        var type = this,
            attributed_ids = $("p.orcid[data-" + type + "]").map(function() { return $(this).data(type.toString()); }).get();

        $('.agent_' + type).each(function() {
          var self = this;
          $.ajax({
            method: "GET",
            url: "/user.json?q=" + $(self).text(),
            dataType: "json"
          }).done(function(data) {
            var searched_ids = $.map(data, function(i) { return i.wikidata || i.orcid }),
                icon = $(self).find("i").removeClass("fa-spinner").removeClass("fa-pulse");
            if (findOne(searched_ids, attributed_ids)) {
              icon.addClass("fa-check").addClass("text-success");
            } else {
              icon.addClass("fa-question").addClass("text-warning");
            }
          });
        });
      });

      if (!$('#map').length) { return; }

      var map;

      function drawVisualizations() {
        var options = {
          displayMode: 'markers',
          colorAxis: { colors: ['white'] },
          tooltip: { trigger: 'none'}
        };

        var data = google.visualization.arrayToDataTable([
          ['Lat', 'Long', 'Name'],
          [#{@occurrence.decimalLatitude}, #{@occurrence.decimalLongitude}, "#{@occurrence.scientificName}"]
        ]);

        map = new google.visualization.GeoChart($('#map')[0]);
        map.draw(data, options);
      }

      google.charts.load('current', {
        packages: ['corechart','geochart'],
        mapsApiKey: "#{Settings.google.api_key}"
      });
      google.charts.setOnLoadCallback(drawVisualizations);

      $(window).on("throttledresize", function(event) {
        map.clearChart();
        drawVisualizations();
        $("#map-wrapper").height(map.container.offsetHeight);
      });

    });

- content_for :jumbotron do
  .jumbotron.jumbotron-fluid.d-flex.flex-wrap
    .mr-auto.p-2
      %h1.h2= I18n.t('occurrence.occurrence_title')
      %p.lead.text-muted= I18n.t('occurrence.lede')

.card-deck.occurrence.mt-4
  .card.mb-4
    .card-header.border-bottom
      %h5= I18n.t('occurrence.record')
    .card-body.mt-2
      %dl.dl-horizontal
        %dt gbifID
        %dd.py-1
          %a{href: gbif_occurrence_url(@occurrence.id), target:"_blank"}
            #{@occurrence.id}
            %i.fas.fa-external-link-alt
        %dd.line-break

        %dt datasetKey
        %dd.py-1
          - if @occurrence.datasetKey
            %a{href: "https://gbif.org/dataset/#{@occurrence.datasetKey}", target:"_blank"}
              #{@occurrence.datasetKey}
              %i.fas.fa-external-link-alt
        %dd.line-break

        %dt occurrenceID
        %dd.py-1
          - if @occurrence.occurrenceID && @occurrence.occurrenceID[0..3] == "http"
            %a{href: "#{@occurrence.occurrenceID}", target:"_blank"} #{@occurrence.occurrenceID}
          - else
            #{h(@occurrence.occurrenceID)}
        %dd.line-break

        %dt institutionCode
        %dd.py-1 #{h(@occurrence.institutionCode)}
        %dd.line-break

        %dt collectionCode
        %dd.py-1 #{h(@occurrence.collectionCode)}
        %dd.line-break

        %dt catalogNumber
        %dd.py-1 #{h(@occurrence.catalogNumber)}
        %dd.line-break

        %dt basisOfRecord
        %dd.py-1 #{h(@occurrence.basisOfRecord)}
        %dd.line-break

        %dt #{I18n.t('occurrence.has_image')}
        %dd.py-1 #{I18n.t(@occurrence.hasImage.present?.to_s)}

  .card.mb-4
    .card-header.border-bottom
      %h5= I18n.t('occurrence.location')
    .card-body.mt-2
      %dl.dl-horizontal
        %dt country
        %dd.py-1 #{h(@occurrence.country)}
        %dd.line-break

        %dt countryCode
        %dd.py-1 #{h(@occurrence.countryCode)}
        %dd.line-break

        %dt decimalLatitude
        %dd.py-1 #{h(@occurrence.decimalLatitude)}
        %dd.line-break

        %dt decimalLongitude
        %dd.py-1 #{h(@occurrence.decimalLongitude)}
        %dd.line-break

      - if @occurrence.decimalLongitude && @occurrence.decimalLatitude
        #map-wrapper{style:"height: 100%"}
          #map{style: "width:65%;"}

  .card.mb-4
    .card-header.border-bottom
      %h5= I18n.t('occurrence.event')
    .card-body.mt-2
      %dl.dl-horizontal
        %dt eventDate
        %dd.py-1 #{h(@occurrence.eventDate)}
        %dd.line-break

        %dt year
        %dd.py-1 #{h(@occurrence.year)}
        %dd.line-break

        %dt recordedBy
        %dd.py-1 #{h(@occurrence.recordedBy)}
        %dd.line-break

        %dt recordedByID
        %dd.py-1 #{h(@occurrence.recordedByID)}
        %dd.line-break

        %dt Agent Strings
        %dd.py-1
          %hr
          .mt-2
            %ul.list-unstyled
              - @occurrence.recorders.each do |agent_recorder|
                %li.agent_recorders
                  #{agent_recorder.fullname}
                  %i.fas.fa-spinner.fa-pulse
        %dd.line-break

        %dt Attributions
        %dd.py-1
          - if @occurrence.user_recordings.count > 0
            %hr
            .mt-2
              - @occurrence.user_recordings.each do |recorder|
                %p.orcid.text-lg-left.p-0.mt-1{"data-recorders": "#{recorder.user.identifier}"}
                  - if recorder.user.orcid
                    #{recorder.user.fullname_reverse}
                    %a{href: "https://orcid.org/#{recorder.user.orcid}"}
                      %i.fab.fa-orcid
                      https://orcid.org/#{recorder.user.orcid}
                  - else
                    #{recorder.user.fullname_reverse}
                    %img{src: "/images/wikidata_24x24.png", alt:"Wikidata iD"}
                    = link_to "https://www.wikidata.org/wiki/#{recorder.user.wikidata}", "https://www.wikidata.org/wiki/#{recorder.user.wikidata}"
                  - if recorder.claimant != recorder.user
                    %span.d-block.ml-3.text-muted.small
                      Attributed by: #{recorder.claimant.fullname_reverse}
                      %a{href: "https://orcid.org/#{recorder.claimant.orcid}"}
                        %i.fab.fa-orcid
                        https://orcid.org/#{recorder.claimant.orcid}
        %dd.line-break

  .card.mb-4
    .card-header.border-bottom
      %h5= I18n.t('occurrence.identification')
    .card-body.mt-2
      %dl.dl-horizontal
        %dt family
        %dd.py-1 #{h(@occurrence.family)}
        %dd.line-break

        %dt scientificName
        %dd.py-1 #{h(@occurrence.scientificName)}
        %dd.line-break

        %dt typeStatus
        %dd.py-1 #{h(@occurrence.typeStatus)}
        %dd.line-break

        %dt dateIdentified
        %dd.py-1 #{h(@occurrence.dateIdentified)}
        %dd.line-break

        %dt identifiedBy
        %dd.py-1 #{h(@occurrence.identifiedBy)}
        %dd.line-break

        %dt identifiedByID
        %dd.py-1 #{h(@occurrence.identifiedByID)}
        %dd.line-break

        %dt Agent Strings
        %dd.py-1
          %hr
          .mt-2
            %ul.list-unstyled
              - @occurrence.determiners.each do |agent_determiner|
                %li.agent_determiners
                  #{agent_determiner.fullname}
                  %i.fas.fa-spinner.fa-pulse
        %dd.line-break

        %dt Attributions
        %dd.py-1
          - if @occurrence.user_identifications.count > 0
            %hr
            .mt-2
              - @occurrence.user_identifications.each do |determiner|
                %p.orcid.text-lg-left.p-0.mt-1{"data-determiners": "#{determiner.user.identifier}"}
                  - if determiner.user.orcid
                    #{determiner.user.fullname_reverse}
                    %a{href: "https://orcid.org/#{determiner.user.orcid}"}
                      %i.fab.fa-orcid
                      https://orcid.org/#{determiner.user.orcid}
                  - else
                    #{determiner.user.fullname_reverse}
                    %img{src: "/images/wikidata_24x24.png", alt:"Wikidata iD"}
                    = link_to "https://www.wikidata.org/wiki/#{determiner.user.wikidata}", "https://www.wikidata.org/wiki/#{determiner.user.wikidata}"
                  - if determiner.claimant != determiner.user
                    %span.d-block.ml-3.text-muted.small
                      Attributed by: #{determiner.claimant.fullname_reverse}
                      %a{href: "https://orcid.org/#{determiner.claimant.orcid}"}
                        %i.fab.fa-orcid
                        https://orcid.org/#{determiner.claimant.orcid}
        %dd.line-break

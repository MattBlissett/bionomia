- content_for :title, I18n.t('occurrence.occurrence_title')
- content_for :stylesheets do
  :css
    .carousel-control-prev, .carousel-control-next {
      background-color: #c0c0c0;
      width: 3em;
    }
- content_for :scripts do
  %script{src: "//www.gstatic.com/charts/loader.js"}
  %script{src: "/js/occurrence_widget.js"}
  :javascript
    $(function() {

      google.charts.load('current', {
        packages: ['corechart','geochart'],
        mapsApiKey: "#{Settings.google.api_key}"
      });

      function drawVisualizations(lat, long) {
        var options = {
          displayMode: 'markers',
          colorAxis: { colors: ['white'] },
          tooltip: { trigger: 'none'}
        };

        var data = google.visualization.arrayToDataTable([
          ['Lat', 'Long'],
          [lat, long]
        ]);

        var map = new google.visualization.GeoChart($('#map')[0]);
        map.draw(data, options);
      }

      function loadContent() {
        $.ajax({
          method: "GET",
          url: "/occurrence/widget_item",
          dataType: "html",
          beforeSend: function(xhr) {
          }
        }).done(function(data) {
          $("#occurrence").html(data);
          var network = $('#occurrence-widget-item').data('network');
          var ignored = $('#occurrence-widget-item').data('ignored');
          OccurrenceWidget.init($('#selector-template'), network, ignored);
          if ($('#map').length) {
            var lat = parseFloat($('[data-latitude]', '#location').data('latitude'));
            var long = parseFloat($('[data-longitude]', '#location').data('longitude'));
            google.charts.setOnLoadCallback(drawVisualizations(lat, long));
          }
        });
      }

      $('#carousel').on('slid.bs.carousel', function () {
        $(this).find('.carousel-item.active').removeClass('active');
        loadContent();
        $(this).find('#occurrence').parent().addClass('active');
      });

      loadContent();
    });

- content_for :jumbotron do
  .jumbotron.jumbotron-fluid.d-flex.flex-wrap
    .mr-auto.p-2
      %h1.h2= I18n.t('occurrence.occurrence_title')
      %p.lead.text-muted= I18n.t('occurrence.lede')

#carousel.carousel.slide.carousel-fade.mt-4{"data-touch": "false", "data-interval": "false"}
  .carousel-inner
    .carousel-item.active.px-3
      #occurrence.px-5
    .carousel-item.px-5

  %a.carousel-control-prev{href: "#carousel", role: "button", "data-slide": "prev"}
    %span.carousel-control-prev-icon{"aria-hidden": "true"}
    %span.sr-only Previous
  %a.carousel-control-next{href: "#carousel", role: "button", "data-slide": "next"}
    %span.carousel-control-next-icon{"aria-hidden": "true"}
    %span.sr-only Previous

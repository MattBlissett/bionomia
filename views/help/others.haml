-content_for :title, I18n.t('help.country_title')

-content_for :scripts do
  %script{src: "/js/application.js"}
  %script{src: "/js/jquery.throttledresize.js"}
  %script{src: "/js/geochart-hierarchy.js"}
  %script{src: "//www.gstatic.com/charts/loader.js"}
  %script{src: "/js/progress-bar.js"}
  - countries = @country_counts.map{|k,v| [ k, country_name(k), v ] }.unshift(["Country", "Country Name", "#{I18n.t('charts.people')}"])
  :javascript
    $(function() {
      Application.init("", "GET", "/help-others");
      var ids = $.map($('.progress-bar'), function(obj) {
        if ( parseInt($(obj).parent().parent().find(".badge").text(), 10) > 0 ) {
          return $(obj).attr("id").split("_").pop();
        }
      });
      $.each(ids, function(key, id) {
        ProgressBar.init(id);
      });

      if ($('#country-map').length) {
        var countries = #{countries}, map;

        google.charts.load('current', {
          packages: ['geochart'],
          mapsApiKey: "#{Settings.google.api_key}"
        });

        function drawVisualizations() {
          var mapOptions = {
                chartArea: { left: 0 },
                colorAxis: { colors: ['#B9D4D8', '#3A7179'] },
                legend: 'none',
                region: 'world'
              };
          map = new google.visualization.GeoChart($('#country-map')[0]);
          google.visualization.events.addListener(map, 'regionClick', function(e) {
            window.location = "/help-others/country/" + e.region;
          });
          map.draw(google.visualization.arrayToDataTable(countries), mapOptions);
        }

        google.charts.setOnLoadCallback(drawVisualizations);

        $(window).on("throttledresize", function(event) {
          map.clearChart();
          drawVisualizations();
        });
      }
    });

-content_for :jumbotron do
  %div{class:"jumbotron jumbotron-fluid d-flex flex-wrap alert-warning"}
    %div{class: "mr-auto p-2"}
      %h1{class:"h2"}= I18n.t('help.country_title')
      %P{class:"lead text-muted"}= I18n.t('help.country_lede')
    = haml :'partials/help/search', layout: false

- if @results.empty? && params[:q] && !params[:q].empty?
  %div{class: "alert alert-warning tiny-margins", role: "alert"}
    = I18n.t('help.no_one_found', name: h(params[:q]))
    = I18n.t('help.add_someone_html', href: link_to(I18n.t('help.add_someone_href'), url('/help-others/add')))

- if @results.empty? || params[:q].nil?
  = haml :'partials/help/main_tabs', layout: false, locals: { active_main_tab: "country" }

  - if !@friends.empty?
    %div{class: "alert alert-info tiny-margins", role: "alert"}
      %i{class:"fas fa-user-friends mr-2"}
      = I18n.t('help.do_you_know')
      - @friends.each_with_index do |u, i|
        = succeed (@friends.count > i+1) ? ", " : "" do
          %a{href: url("/help-others/#{u[:identifier]}")} #{u[:fullname]}
      %a{href:"#", class:"help-refresh ml-2"}
        %i{class: "fas fa-sync-alt"}
        = I18n.t('profile.refresh')

  = haml :'partials/help/countries', layout: false

- else
  %div{class: "alert alert-info tiny-margins", role: "alert"}
    = succeed "." do
      = I18n.t('help.search_count', count: @pagy.count, search: h(params[:q]))
    = I18n.t('help.add_someone_html', href: link_to(I18n.t('help.add_someone_href'), url('/help-others/add')))

  %div
    - @results.in_groups_of(3).each do |group|
      %div{class: "card-deck"}
        - group.each do |user|
          - if user.nil?
            %div{class:"card border-0"}
          - else
            = haml :'partials/user/card_dynamic', layout: false, locals: { user: User.find(user[:_id]), path: "help-others" }

    - if @pagy.pages > 1
      %div{style:"overflow-y:scroll"}
        = pagy_bootstrap_nav(@pagy)
